// Generated by view binder compiler. Do not edit!
package com.example.androidev3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidev3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActionsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button buttonArreter;

  @NonNull
  public final Button buttonContenuBacs;

  @NonNull
  public final Button buttonMettreAJourRampe;

  @NonNull
  public final Button buttonRetour;

  @NonNull
  public final Button buttonScannerLesBriques;

  @NonNull
  public final Button buttonTrierLesBriques;

  @NonNull
  public final Button buttonViderLesBacs;

  @NonNull
  public final ConstraintLayout constraintLayout;

  private ActivityActionsBinding(@NonNull CoordinatorLayout rootView, @NonNull Button buttonArreter,
      @NonNull Button buttonContenuBacs, @NonNull Button buttonMettreAJourRampe,
      @NonNull Button buttonRetour, @NonNull Button buttonScannerLesBriques,
      @NonNull Button buttonTrierLesBriques, @NonNull Button buttonViderLesBacs,
      @NonNull ConstraintLayout constraintLayout) {
    this.rootView = rootView;
    this.buttonArreter = buttonArreter;
    this.buttonContenuBacs = buttonContenuBacs;
    this.buttonMettreAJourRampe = buttonMettreAJourRampe;
    this.buttonRetour = buttonRetour;
    this.buttonScannerLesBriques = buttonScannerLesBriques;
    this.buttonTrierLesBriques = buttonTrierLesBriques;
    this.buttonViderLesBacs = buttonViderLesBacs;
    this.constraintLayout = constraintLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_actions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonArreter;
      Button buttonArreter = ViewBindings.findChildViewById(rootView, id);
      if (buttonArreter == null) {
        break missingId;
      }

      id = R.id.buttonContenuBacs;
      Button buttonContenuBacs = ViewBindings.findChildViewById(rootView, id);
      if (buttonContenuBacs == null) {
        break missingId;
      }

      id = R.id.buttonMettreAJourRampe;
      Button buttonMettreAJourRampe = ViewBindings.findChildViewById(rootView, id);
      if (buttonMettreAJourRampe == null) {
        break missingId;
      }

      id = R.id.buttonRetour;
      Button buttonRetour = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetour == null) {
        break missingId;
      }

      id = R.id.buttonScannerLesBriques;
      Button buttonScannerLesBriques = ViewBindings.findChildViewById(rootView, id);
      if (buttonScannerLesBriques == null) {
        break missingId;
      }

      id = R.id.buttonTrierLesBriques;
      Button buttonTrierLesBriques = ViewBindings.findChildViewById(rootView, id);
      if (buttonTrierLesBriques == null) {
        break missingId;
      }

      id = R.id.buttonViderLesBacs;
      Button buttonViderLesBacs = ViewBindings.findChildViewById(rootView, id);
      if (buttonViderLesBacs == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      return new ActivityActionsBinding((CoordinatorLayout) rootView, buttonArreter,
          buttonContenuBacs, buttonMettreAJourRampe, buttonRetour, buttonScannerLesBriques,
          buttonTrierLesBriques, buttonViderLesBacs, constraintLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
